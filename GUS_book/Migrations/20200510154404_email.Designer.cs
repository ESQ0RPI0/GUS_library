// <auto-generated />
using GUS_book.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GUS_book.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20200510154404_email")]
    partial class email
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GUS_book.Models.Library.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Лев Толстой",
                            Name = "Анна Каренина",
                            OwnerId = 0,
                            Year = 1873
                        },
                        new
                        {
                            Id = 2,
                            Author = "Александр Пушкин",
                            Name = "Евгений Онегин",
                            OwnerId = 0,
                            Year = 1831
                        },
                        new
                        {
                            Id = 3,
                            Author = "Михаил Лермонтов",
                            Name = "Герои нашего времени",
                            OwnerId = 0,
                            Year = 1839
                        },
                        new
                        {
                            Id = 4,
                            Author = "Фёдор Достоевский",
                            Name = "Братья Карамазовы",
                            OwnerId = 0,
                            Year = 1880
                        },
                        new
                        {
                            Id = 5,
                            Author = "Михаил Булгаков",
                            Name = "Собачье сердце",
                            OwnerId = 0,
                            Year = 1925
                        });
                });

            modelBuilder.Entity("GUS_book.Models.Library.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 23,
                            Name = "Петя"
                        },
                        new
                        {
                            Id = 2,
                            Age = 26,
                            Name = "Иван"
                        },
                        new
                        {
                            Id = 3,
                            Age = 28,
                            Name = "Коля"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
